=head1 NAME

Config::Model::models::Itself::Class - Configuration class Itself::Class

=head1 DESCRIPTION

Configuration classes used by L<Config::Model>

Configuration class. This class represents a node of a configuration tree.

=head1 Elements

=head2 class_description

Explain the purpose of this configuration class. This description will be re-used to generate the documentation of your configuration class. You can use pod markup to format your description. See L<perlpod> for details. I<< Optional. Type string.  >>

=head2 license

I<< Optional. Type string.  >>

=head2 author

I<< Optional. Type list of uniline.  >>

=head2 copyright

I<< Optional. Type list of uniline.  >>

=head2 element

Specify the elements names of this configuration class. I<< Optional. Type hash of node.  >>

=head2 include

Include the specification of another class into this class. I<< Optional. Type list of reference.  >>

=head2 include_after

insert the included elements after a specific element. I<< Optional. Type reference.  >>

=head2 write_config_dir

I<< Optional. Type uniline.  >>

=head2 read_config_dir

I<< Optional. Type uniline.  >>

=head2 generated_by

When set, this class was generated by some program. You should not edit it as your modification may be clobbered later on. I<< Optional. Type uniline.  >>

=head2 read_config

Specify the Perl class(es) and function(s) used to read configuration data. The specified function will be tried in sequence to get configuration data. . I<< Optional. Type list of node.  >>

=head2 write_config

Specify the Perl class and function used to write configuration data. I<< Optional. Type list of node.  >>

=head2 accept

Specifies names of the elements this configuration class will accept as valid. The key of the hash is a regular expression that will be tested against 
           candidate parameters. When the parameter matches the regular expression, 
           a new parameter is created in the model using the description provided
           in the value of this hash key. Note that the regexp must match the whole 
           candidate parameter name. I.e. the specified regexp will be eval'ed 
           with a leading ^ and a trailing $. I<< Optional. Type hash of node.  >>

=head1 SEE ALSO

=over

=item *

L<config-edit>

=item *

L<Config::Model::models::Itself::ConfigAccept>

=item *

L<Config::Model::models::Itself::ConfigRead>

=item *

L<Config::Model::models::Itself::ConfigWrite>

=item *

L<Config::Model::models::Itself::Element>

=back

=head1 AUTHOR

=over

=item Dominique Dumont


=back

=head1 COPYRIGHT

=over

=item 2007-2011 Dominique Dumont.


=back

=head1 LICENSE

=over

=item LGPL-2


=back

=cut

